// Gutter Syntax
// =============

// Gutters
// -------
// Set gutters on an element.
// - [$context]   : <settings>
@mixin gutters(
  $context: join((of), get-grid())
) {
  $context                : parse-span($context);

  $override               : get-span-setting(span, $context);
  $this-columns           : get-span-setting(columns, $context);
  $this-gutters           : get-span-setting(gutters, $context);
  $this-column-width      : get-span-setting(column-width, $context);
  $this-layout-math       : get-span-setting(layout-math, $context);
  $this-gutter-position   : get-span-setting(gutter-position, $context);
  $this-flow              : get-span-setting(flow, $context);

  $from: from($this-flow);
  $to: to($this-flow);

  @if $override { $override: if(unitless($override), false, $override); }

  $this-gutters: get-gutters($this-columns, $this-gutters, $this-column-width, $this-layout-math, $this-gutter-position, $override);
  $property: if($this-gutter-position == inside or $this-gutter-position == inside-static, padding, margin);

  #{$property}-#{$from}: nth($this-gutters, 1);
  #{$property}-#{$to}: nth($this-gutters, 2);
}

// Gutter
// ------
// Return the width of a gutter.
// - [$context]   : <settings>
@function gutter(
  $context: get-grid()
) {
  $context                : get-adjusted-grid($context);

  $this-columns           : get-setting(columns, $context);
  $this-gutters           : get-setting(gutters, $context);
  $this-column-width      : get-setting(column-width, $context);
  $this-layout-math       : get-setting(layout-math, $context);
  $this-gutter-position   : get-setting(gutter-position, $context);

  $this-layout-math: if($this-gutter-position == inside-static, static, $this-layout-math);
  $width: get-gutter-width($this-columns, $this-gutters, $this-column-width, $this-layout-math, $this-gutter-position);

  $split: if($this-gutter-position == before or $this-gutter-position == after, false, true);

  @if $split {
    $width: $width / 2;
  }

  @return $width;
}

// Get Gutter Width
// ----------------
// Return gutter width.
// - [$columns]       : <number> | <list>
// - [$gutters]       : <ratio>
// - [$column-width]  : <length>
// - [$layout-math]   : fluid | static
@function get-gutter-width(
  $columns          : $columns,
  $gutters          : $gutters,
  $column-width     : $column-width,
  $layout-math      : $layout-math,
  $gutter-position  : $gutter-position
) {
  $context  : null;
  $gutter   : null;

  $inside: if($gutter-position == inside or $gutter-position == inside-static, true, false);

  @if $layout-math == static {
    $gutter: $gutters * $column-width;
  } @else {
    @if $inside {
      $context: column-sum($columns, $gutters, outer);
    } @else {
      $context: column-sum($columns, $gutters);
    }
    $gutter: percentage($gutters / $context);
  }

  @return $gutter;
}

// Get Gutters
// -----------
// Return before and after gutter values.
// - [$columns]           : <number> | <list>
// - [$gutters]           : <ratio>
// - [$column-width]      : <length>
// - [$layout-math]       : fluid | static
// - [$gutter-position]   : before | after |split | inside
// - [$gutter-override]   : <length>
@function get-gutters(
  $columns            : $columns,
  $gutters            : $gutters,
  $column-width       : $column-width,
  $layout-math        : $layout-math,
  $gutter-position    : $gutter-position,
  $gutter-override    : false
) {
  $gutter   : null;
  $before   : null;
  $after    : null;

  @if $gutter-override {
    $gutter: $gutter-override;
  } @else {
    $layout-math: if($gutter-position == inside-static, static, $layout-math);
    $gutter: get-gutter-width($columns, $gutters, $column-width, $layout-math, $gutter-position);
  }

  @if $gutter-position == before {
    $before: $gutter;
  } @else if $gutter-position == after {
    $after: $gutter;
  } @else if $gutter-position == split or $gutter-position == inside or $gutter-position == inside-static {
    $gutter: $gutter / 2;
    $before: $gutter;
    $after: $gutter;
  }

  @return $before $after;
}
